<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:util="http://www.springframework.org/schema/util"
	xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
						http://www.springframework.org/schema/beans/spring-beans.xsd
						http://www.springframework.org/schema/context 
						http://www.springframework.org/schema/context/spring-context-4.3.xsd
						http://www.springframework.org/schema/util 
						http://www.springframework.org/schema/util/spring-util-4.3.xsd">
	
	<context:component-scan base-package="com.xszheng"></context:component-scan>
	
	<!-- 
		配置 bean
		1、class：bean 的全类名，通过反射的方式在 IOC 容器中创建实例，所以要求 bean 中必须有默认构造方法
		2、id：标识容器中的 bean，值唯一
		3、不指定 id 属性时，默认的 id 是 com.xszheng.HelloWorld#0 即（包名.类名#自然数）
	-->
	<bean class="com.xszheng.demo1.HelloWorld">
		<property name="name">
			<value><![CDATA[<spring>]]></value>
		</property>
	</bean>
	<bean id="helloword1" class="com.xszheng.demo1.HelloWorld">
		<property name="name"><null/></property>
	</bean>
	
	<!-- 使用构造器方式来创建 bean 时，可以使用 index 和 type 属性来制定参数的位置以及类型 -->
	<bean id="car1" class="com.xszheng.demo2.Car">
		<constructor-arg name="brand" index="0"><value>HAVAL</value></constructor-arg>
		<constructor-arg name="crop" value="长城"></constructor-arg>
		<constructor-arg name="price" value="103000" type="double"></constructor-arg>
	</bean>
	<bean id="car2" class="com.xszheng.demo2.Car">
		<constructor-arg name="brand" value="BOYUE"></constructor-arg>
		<constructor-arg name="crop" value="吉利"></constructor-arg>
		<constructor-arg name="maxSpeed" value="185"></constructor-arg>
	</bean>
	<bean id="car3" class="com.xszheng.demo2.Car">
		<property name="brand" value="MAZDA"></property>
		<property name="crop" value="福特"></property>
		<property name="price" value="153000"></property>
		<property name="maxSpeed" value="200"></property>
	</bean>
	
	<bean id="person" class="com.xszheng.demo3.Person">
		<property name="name" value="小明"></property>
		<property name="age"><value>25</value></property>
		<property name="car" ref="car3"></property>
		<!-- 为级联属性赋值。注意：需要先注入属性，才能为级联属性赋值，否则回报异常，和Struts2 不同。
		【注：为级联属性赋值后，其他地方引用该bean也会受影响】 -->
		<property name="car.brand" value="haval-H6"></property>
	</bean>
	<bean id="person1" class="com.xszheng.demo3.Person">
		<property name="name" value="小红"></property>
		<property name="age" value="26"></property>
		<property name="car">
			<bean class="com.xszheng.demo2.Car">
				<property name="brand" value="奥迪"></property>
				<property name="crop" value="上海"></property>
				<property name="price" value="200000"></property>
			</bean>
		</property>
	</bean>
	<bean id="person2" class="com.xszheng.demo3.Person">
		<constructor-arg name="name" value="小张"></constructor-arg>
		<constructor-arg name="age" value="29"></constructor-arg>
		<constructor-arg name="car">
			<bean class="com.xszheng.demo2.Car">
				<property name="brand" value="奥迪"></property>
				<property name="crop" value="上海"></property>
				<property name="maxSpeed" value="200"></property>
			</bean>
		</constructor-arg>
	</bean>
	<bean id="person3" class="com.xszheng.demo3.Person">
		<constructor-arg name="name" value="小张"></constructor-arg>
		<constructor-arg name="age" value="29"></constructor-arg>
		<constructor-arg name="car" ref="car1"></constructor-arg>
		<property name="car.maxSpeed" value="190"></property>
	</bean>
	
	<!-- 注解注入和配置注入可以同时存在 -->
	<bean id="eBaiOutwayApi" class="com.xszheng.polymorphic.impl.EBaiOutwayApi"></bean>
	
	<bean id="winner1" class="com.xszheng.demo4.Winner">
		<property name="name" value="张大山"></property>
		<property name="bankCards">
			<list>
				<value>111111</value>
				<value>222222</value>
			</list>
		</property>
		<property name="cars" ref="cars">
			<!-- <list>
				<ref bean="car1"/>
				<ref bean="car2"/>
				<ref bean="car3"/>
			</list> -->
		</property>
		<property name="map">
			<map>
				<entry key="AA" value="aa"></entry>
				<entry key="BB" value="bb"></entry>
			</map>
		</property>
	</bean>
	
	<!-- 使用 props 和 prop 标签为 Properties 类型的属性赋值 -->
	<bean id="dataSource" class="com.xszheng.properties.DataSource">
		<property name="props">
			<props>
				<!-- key 值可以随意命名 -->
				<prop key="url1">jdbc:mysql://127.0.0.1:3306/xszheng</prop>
				<prop key="driverClass">com.mysql.jdbc.Driver</prop>
				<prop key="usename">root</prop>
				<prop key="password">123456</prop>
			</props>
		</property>
	</bean>
	
	<!-- 配置单例的集合 bean，以供多个bean 进行引用。需导入 util 命名空间 -->
	<util:list id="cars">
		<ref bean="car1"/>
		<ref bean="car2"/>
		<ref bean="car3"/>
	</util:list>
	
	<!-- 通过 p 命名空间为 bean 的属性赋值。需先导入 p 命名空间 -->
	<bean id="car4" class="com.xszheng.demo2.Car" p:brand="五菱宏光" p:crop="中国" p:maxSpeed="150"
		p:price="50000"></bean>
</beans>
